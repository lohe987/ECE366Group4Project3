# Ed
# F.A.S.T. Prog 1

UNKNOWN

01001101 # register that will be exponentiated i.e. 6^p
10001110 # keep an incrementer in memory
00100001 # mem[6] = 0 initially

UNKNOWN
00000000 # r0 = 0
10010000 # r0 = mem[0] = P
01101111 # if P (r0) == incrementer (r1), finish
# else do exponentiation
00110011 # r2 = r3 + r3 = 1 + 1
10111011 # r2 = r2 + r3 = 1 + 2 = 3
10111110 # r3 = r2 + r2 = 3 + 3 = 6
10000111 # r0 = 7
10101100 # mem[7] = r3

UNKNOWN
00001001 # r1 = 1
10011001 # r2 = mem[1] = Q
11011110 # if r3 < r2 then r0 = 1
01101100 # if r3 < 0, branch out
00110110 # r3 = r3 - r2
11100010 # otherwise keep subtracting

UNKNOWN
11000101 # r1 = 1 + 1 = 2
00101101 # mem[2] <= r3
00000110 # r0 = 6
00010100 # r1 <= mem[6] = incrementer
11000101 # r1 ++ (incrementer++)
00100100 # mem[6] <= incrementer
10000010 #addi r0, 
10011100 # r3 = mem[7]
01100000 # jump back to loop

UNKNOWN
11110000 # PC not changing
